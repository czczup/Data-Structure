多项式表示问题的启示:
1.同一个问题可以有不同方式为表示方法
2.有一类共性问题:有序线性序列的组织和管理
线性表:由同类型数据元素构成有序序列的线性结构
    •表中元素个数称为线性表的长度
    •线性表没有元素时，称为空表
    •表起始位置称为表头，结束位置称为表尾

线性表的顺序存储实现
•利用数组的连续存储空间顺序存放线性表的各元素
•不要求逻辑上相邻的两个元素物理上也相邻，通过链建立起数据元素之间的逻辑关系
 插入、删除不需要移动数据元素，只需要修改链

广义表:
    •广义表是线性表的推广
    •对于线性表而言，n个元素都是基本的单元素
    •广义表中，这些元素不仅可以是单元素，也可以是另一个广义表

多重链表:链表中的结点可能同时隶属于多个链表
    •多重链表中结点的指针域会有多个，如前面例子包含Next和SubList两个指针域
    •但包含两个指针域的链表不一定是多重链表，比如双向链表不是多重链表
    •多重链表有广泛的用途:基本上如树、图这样相对复杂的数据结构都可以采用多重链表方式实现存储

堆栈:具有一定操作约束的线性表
    •只在一端做(栈顶)插入删除
    •插入数据:入栈(Push)
    •删除数据:出栈(Pop)
    •先入后出:Last In First Out(LIFO)
中缀表达式:运算符号位于两个运算数之间
后缀表达式:运算符号位于两个运算数之间

类型名称:堆栈(Stack)
数据对象集:一个有0个或多个元素的有穷线性表
操作集:长度为MaxSize的堆栈S∈Stack,堆栈元素item∈ElementType

一个数组实现两个堆栈
•使这两个堆栈分别从数组的两头开始向中间生长，当两个栈的栈顶指针相遇时，表示两个栈都满了

堆栈的链式存储实现：
•栈的链式存储结构实际上就是一个单链表，叫做链栈，插入和删除操作只能在链栈的栈顶进行
•Top在链表头上

中缀表达式如何转换为后缀表达式
•从头到尾读取中缀表达式的每个对象，对不同对象按不同情况处理
•运算数:直接输出
•左括号:压入堆栈
•右括号:将栈顶的运算符弹出并输出，直到遇到左括号
•运算符:
    •若优先级大于栈顶运算符时，则把它圧栈
    •若优先级小于等于栈顶运算符时，将栈顶运
     算符弹出并输出，在比较新的栈顶运算符，
     知道该运算符大于栈顶运算符优先级为止，
     然后将该运算符圧栈
•若各对象处理完毕,则把堆栈中存留的运算符一并输出

堆栈的其他应用:
•函数调用及递归实现
•深度优先搜索
•回溯算法

队列:具有一定操作约束的线性表
•插入和删除操作:只能在一端插入,而在另一端删除
•数据插入:入队列(AddQ)
•数据删除:出队列(DeleteQ)
•先来先服务
•先进先出:FIFO

队列的顺序存储实现
•队列的顺序存储结构通常由一个一维数组和一个记录队列头元素位置的变量front以及一个记录队列为元素位置的变量rear组成
队列的链式存储实现
•队列的链式存储结构也可以用一个单链表实现。插入和删除操作分别在列表两头进行